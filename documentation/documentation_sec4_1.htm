<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<title>fsTimer documentation - Section 4.1: Setting up for a new race</title>
<meta name="description" content="fsTimer - free, open source software for race timing">
<link rel="stylesheet" type="text/css" href="style_doc.css">
</head>
<body>
<div id="top-box">
<h3><a href="http://fstimer.org/">fsTimer</a> documentation</h3>
</div>

<div id="lower-box">

<b>Section 1</b> <a href="http://fstimer.org/download.htm">Installing fsTimer</a><br>
<b>Section 2</b> <a href="documentation_sec2.htm">Overview</a><br>
<!--
<h5><b>2.1</b> <a href="documentation_sec2_1.htm">Opening and main windows</a><br></h5>
<h5><b>2.2</b> <a href="documentation_sec2_2.htm">Importing preregistration</a><br></h5>
<h5><b>2.3</b> <a href="documentation_sec2_3.htm">Registration</a><br></h5>
<h5><b>2.4</b> <a href="documentation_sec2_4.htm">Compiling registrations</a><br></h5>
<h5><b>2.5</b> <b>Race timing</b><br></h5>
-->
<b>Section 3</b> <a href="documentation_sec3.htm">Checklist for timing with fsTimer</a><br>
<b>Section 4</b> <a href="documentation_sec4.htm">Detailed descriptions of fsTimer components</a><br>
<h5><b>4.1</b> <b>Setting up for a new race</b><br></h5>
<h5><b>4.2</b> <a href="documentation_sec4_2.htm">Importing preregistration - details</a><br></h5>
<h5><b>4.3</b> <a href="documentation_sec4_3.htm">Registration - details</a><br></h5>
<h5><b>4.4</b> <a href="documentation_sec4_4.htm">Compiling registrations - details</a><br></h5>
<h5><b>4.5</b> <a href="documentation_sec4_5.htm">Race timing - details</a><br></h5>
<h5><b>4.6</b> <a href="documentation_sec4_6.htm">Timing multiple laps</a><br></h5>
<h5><b>4.7</b> <a href="documentation_sec4_7.htm">Handicap races</a><br></h5>
<b>Section 5</b> <a href="documentation_sec5.htm">Additional details for developers</a><br>
</div>

<div id="lower-box">
<h3>Section 4.1 - Setting up for a new race</h3><br>

<a href="documentation_sec2_6.htm">Section 2.6</a> gave a brief overview of creating a new project, and now we will dive into the details.<br><br>

The first step to creating a new project is to choose a project name. The name must use only letters, numbers, and underscore. It must also not be the name of an already existing project (or, more precisely, an already existing file or directory in the fstimer directory). If a project of that same name already exists, fsTimer will throw an error and will not let you advance until you choose a name that isn't already in use:<br><br>

<img width="355" height="250" src="documentation_figs/fstimer_fig27.png"><br><br> <!--444x313-->

If you want to use a name that is already taken by an existing file or folder, you will have to rename or delete that file or folder.<br><br>

The next window allows you to choose the type of the race:<br><br>

<img width="516" height="221" src="documentation_figs/fstimer_fig61.png"><br><br> <!--645x277-->

A standard race is one where all racers have the same start time. In a handicap race, a "Handicap" time must be specified for all racers. Their final time is then calculated as the marked time minus the handicap. This allows racers to start at different times - a racer could start five minutes late, and by specifying a handicap of "0:05:00" for that racer, his time in the results would be corrected. Usually this is done for a race where all runners provide their handicap relative to a base time, and runners start at different times with the hope of all crossing the finish line around the same time.<br><br>

For lap timing, times are marked each time a racer completes a lap. The results printout will then display the total time along with the time for each of the individual laps.<br><br>

The next window allows you to specify the fields that will show up in the registration database.<br><br>

<img width="482" height="341" src="documentation_figs/fstimer_fig19.png"><br><br> <!--602x426-->

The "Up" and "Down" buttons allow you to change the order of the fields. This is the order in which they will appear in the registration database: The top entry in this window will be the furthest left column in the registration window, and the bottom entry in this window will be the furthest right column in the registration window. If you have many fields and some of them you want to be able to see without having to sideways scroll in the registration window, you should put them towards the top of this lsit.<br><br>

The "Remove" button removes a field. Last name, First name, ID, Age, and Gender, however, are hard-coded fields due to their importance for creating divisional results. (If it is a "handicap" race, then the field "Handicap" is also required). These fields cannot be removed. The "New.." buttons allow you to create a new entrybox or combobox. A combobox means in the registration database the entry will have to take one of a set collection of values. In the window for creating a new registration entry below, "Gender" is a combobox with options "male" and "female" (and blank). An entrybox is a box for freely entering text, like "Last name" and "First name" in the registration entry below.<br><br>

<img width="310" height="332" src="documentation_figs/fstimer_fig29.png"><br><br> <!--388x415-->

When creating a new entrybox, you will specify the name of the field (e.g., Last name) and the maximum number of characters to allow in the entrybox. The appropriate maximum number of characters will depend on the field (ID will probably require fewer than Address).<br><br>

<img width="482" height="341" src="documentation_figs/fstimer_fig30.png"><br><br> <!--602x426-->

When creating a new combobox, you will specify the name of the field (e.g., Gender) as well as what the options in the combobox should be, separated by commas. For example, "male,female" would indicate that the options should be male and female. A blank option will automatically be added to any combobox, you don't need to worry about adding it yourself.<br><br>

<img width="482" height="341" src="documentation_figs/fstimer_fig31.png"><br><br> <!--602x426-->

fsTimer will not allow you to create two fields with the same name.<br><br>

<img width="482" height="341" src="documentation_figs/fstimer_fig32.png"><br><br> <!--602x426-->

When you have finished specifying the registration fields, you can move on to controlling the behavior of the "Add family" button, as described in Section 2.6. You should select all of the fields that are <i>not</i> the same for all members of a family, probably First name, ID, Age, and Gender.  <br><br>

<img width="420" height="275" src="documentation_figs/fstimer_fig20.png"><br><br> <!--525x344-->

At that step, you have the optionnal possibility to deal with Advanced Ranking, as described in Section 2.6. If standard ranking based on time suits your needs, just go on to the definition of Divisions.<br><br>

<img width="572" height="340" src="documentation_figs/fstimer_fig42.png"><br><br> <!--715x425-->

Advanced Ranking allows you to define multiple and non standard ways of ranking your runners. By default a single ranking is present, based on time and respecting divisions. This ranking is named "times" and is associated to the python expression "entry[1]"<br><br>

Using the buttons on the right New, Delete, Up, Down, you can define extra rankings by giving the python expression that define them and specifying whether they should respect divisions or not.<br><br>

The python expression can use 2 main variables :
<dl>
  <dt>entry</dt>
  <dd>a tuple containing the runner id and its time as a timedelta object, hence the entry[1] value for the default timing</dd>
  <dt>self</dt>
  <dd>the timer object giving access to all the internals of fstimer. In particular, self.timing is the fstimer's timing dictionnary, containing for each user (given by its id) a dictionnary of the different fields defined in the fields windows. So self.timing[10]['Age'] gives the age of the user with id 10</dd>
</dl>

<img width="572" height="340" src="documentation_figs/fstimer_fig28.png"><br><br> <!--715x425-->

As an example is worth many explanations, here is what you would do for defining a age/perf ranking where each extra year will give you a 15s bonus :<br><br>
&nbsp;&nbsp;entry[1].total_seconds()-15*(int(self.timing[entry[0]]['Age']))<br><br>

Note the cast into int as the fields dictionnary gives strings and the unchecking of the UseDivs column's checkbox specifying that this ranking won't be respecting the divisions.<br><br>

Finally you must specify the divisionals. Again, "Up" and "Down" change the order in which the divisions will appear in the divisional results.<br><br>

<img width="642" height="421" src="documentation_figs/fstimer_fig21.png"><br><br> <!--802x526-->

"New" allows you to add a division. Divisions may be defined using a combination of age and any of the comboboxes that were defined as registration fields. For example, if "Grade" was specified as a combobox in when creating the registration fields, then you could define divisionals using "Grade." The name of the division that you specify will be used in the divisional results. Then, use the checkboxes to specify which fields you want to use to define the division. In the example below, "Gender" and "Grade" have been checked, so only those two fields will be used to define the division.<br><br>

<img width="642" height="421" src="documentation_figs/fstimer_fig33.png"><br><br> <!--802x526-->

Note that it is OK to have overlapping divisions, if you want. If a runner falls into multiple divisions (e.g., "boys" and "7th grade boys") then he/she will simply be listed in each of the divisional results.<br><br>

"Edit" and "Remove" work exactly as you would expect.<br><br>

Once the divisions are specified, a new subdirectory in the fstimer directory with the specified project name will be created (that is, if the project name was project_name, then the directory fstimer/project_name is created). Inside of this directory will be a file project_name.reg. This file stores all of the information that you just specified (registration fields, which fields to blank when adding a family member, and divisional divisions) in json format. If you want to use the same project settings across multiple computers (as you will when you want to do registration on multiple computers), then just copy the entire project_name directory into the fstimer directory on all computers.<br><br>


Continue on to <a href="documentation_sec4_2.htm">Section 4.2 Importing preregistration - details</a>.
</div>

</body></html>
